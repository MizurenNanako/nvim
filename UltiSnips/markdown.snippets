global !p
def math():
    return vim.exec_lua('''
        return Check_in_math()
''')

def gen_mat(snip, delim, rows, cols):
    snip.buffer[snip.line] = snip.buffer[snip.line][:snip.buffer[snip.line].rfind(';')]
    ss = '\\begin{' + delim + 'matrix}\n'
    for i in range(0, rows):
        for j in range(1, cols):
            ss += ' ${' f'{i * cols + j}:' 'a_{' f'{i+1},{j}' '}} &'
        ss += ' ${' f'{(i + 1) * cols}:' 'a_{' f'{i+1},{cols}' '}} \\\\\\\\\n'
    ss += '\\end{' + delim + 'matrix}$0'
    snip.expand_anon(ss)
endglobal

snippet $$ "display" i
$$
$1
$$
$0
endsnippet

context "math()"
snippet ^ "super" i
^{$1}$0
endsnippet

context "math()"
snippet 'dis' "display style" ir
\displaystyle 
endsnippet

context "math()"
snippet 'k' "ket" ir
\ket{$1}$0
endsnippet

context "math()"
snippet 'b' "bra" ir
\bra{$1}$0
endsnippet

context "math()"
snippet 'bk' "braket" ir
\braket{$1|$2}$0
endsnippet

context "math()"
snippet 'bbk' "braket2" ir
\braket{$1|$2|$3}$0
endsnippet

context "math()"
snippet 'sum' "user" ir
\sum_{$1}$0
endsnippet

context "math()"
snippet ''a' "user" ir
\alpha
endsnippet

priority 101
context "math()"
snippet '''a' "user" ir
\Alpha
endsnippet
priority 1

context "math()"
snippet ''b' "user" ir
\beta
endsnippet

priority 101
context "math()"
snippet '''b' "user" ir
\Beta
endsnippet
priority 0

context "math()"
snippet ''g' "user" ir
\gamma
endsnippet

priority 101
context "math()"
snippet '''g' "user" ir
\Gamma
endsnippet
priority 1

context "math()"
snippet ''d' "user" ir
\delta
endsnippet

priority 101
context "math()"
snippet '''d' "user" ir
\Delta
endsnippet
priority 0

context "math()"
snippet ''e' "user" ir
\epsilon
endsnippet

priority 101
context "math()"
snippet '''e' "user" ir
\Epsilon
endsnippet
priority 0

context "math()"
snippet ''ve' "user" ir
\varepsilon
endsnippet

context "math()"
snippet ''z' "user" ir
\zeta
endsnippet

priority 101
context "math()"
snippet '''z' "user" ir
\Zeta
endsnippet
priority 0

context "math()"
snippet ''h' "user" ir
\eta
endsnippet

priority 101
context "math()"
snippet '''h' "user" ir
\Eta
endsnippet
priority 0

context "math()"
snippet ''th|'0' "user" ir
\theta
endsnippet

priority 101
context "math()"
snippet '''th' "user" ir
\Theta
endsnippet
priority 0

context "math()"
snippet ''i' "user" ir
\iota
endsnippet

priority 101
context "math()"
snippet '''i' "user" ir
\Iota
endsnippet
priority 0

context "math()"
snippet ''k' "user" ir
\kappa
endsnippet

priority 101
context "math()"
snippet '''k' "user" ir
\Kappa
endsnippet
priority 0

context "math()"
snippet ''l' "user" ir
\lambda
endsnippet

priority 101
context "math()"
snippet '''l' "user" ir
\Lambda
endsnippet
priority 0

context "math()"
snippet ''m' "user" ir
\mu
endsnippet

priority 101
context "math()"
snippet '''m' "user" ir
\Mu
endsnippet
priority 0

context "math()"
snippet ''x' "user" ir
\xi
endsnippet

priority 101
context "math()"
snippet '''x' "user" ir
\Xi
endsnippet
priority 0

context "math()"
snippet ''p' "user" ir
\pi
endsnippet

priority 101
context "math()"
snippet '''p' "user" ir
\Pi
endsnippet
priority 0

context "math()"
snippet ''r' "user" ir
\rho
endsnippet

priority 101
context "math()"
snippet '''r|''6' "user" ir
\Rho
endsnippet
priority 0

context "math()"
snippet ''s|'7' "user" ir
\sigma
endsnippet

priority 101
context "math()"
snippet '''s|''7' "user" ir
\Sigma
endsnippet
priority 0

context "math()"
snippet ''t' "user" ir
\tau
endsnippet

priority 101
context "math()"
snippet '''t' "user" ir
\Tau
endsnippet
priority 0

context "math()"
snippet ''5' "user" ir
\varphi
endsnippet

priority 101
context "math()"
snippet '''5' "user" ir
\Phi
endsnippet
priority 0

context "math()"
snippet ''4' "user" ir
\psi
endsnippet

priority 101
context "math()"
snippet '''4' "user" ir
\Psi
endsnippet
priority 0

context "math()"
snippet ''n' "nabla" ir
\nabla
endsnippet

context "math()"
snippet ''o' "user" ir
\omega
endsnippet

priority 101
context "math()"
snippet '''o' "user" ir
\Omega
endsnippet
priority 0

context "math()"
snippet '9' "user" ir
\left( $1 \right)$0
endsnippet

context "math()"
snippet '\[' "user" ir
\left[ $1 \right]$0
endsnippet

context "math()"
snippet '\{' "user" ir
\left\{ $1 \right\}$0
endsnippet

context "math()"
snippet '==' "user" ir
+
endsnippet

priority 101
context "math()"
snippet '([A-Za-z01]+)(sf|scr|frak|bb|cal)' "user" ir
\math`!p snip.rv = match.group(2) + '{' + match.group(1).upper()`}
endsnippet

context "math()"
snippet '([A-Za-z0-9]+)(bf|rm)' "fontchange" ir
\math`!p snip.rv = match.group(2) + '{' + match.group(1)`}
endsnippet

context "math()"
snippet '(\\?[A-Za-z0-9]+)bs' "boldsymbol" ir
\boldsymbol{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '(\\?[A-Za-z0-9]+)v' "vector" ir
\vec{`!p snip.rv = match.group(1)`}
endsnippet

priority 80
context "math()"
snippet '/' "fraction" ir
\dfrac{${1:${VISUAL}}}{$2}$0
endsnippet

priority 81
context "math()"
snippet '(\\?[A-Za-z0-9_^{}]+)/' "fraction" ir
\dfrac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 82
context "math()"
snippet '(\\?[A-Za-z0-9_^{}]+)/(\\?[A-Za-z0-9_^{}]+)' "fraction" ir
\dfrac{`!p snip.rv = match.group(1) + "}{" + match.group(2)`}$0
endsnippet
priority 0

context "math()"
snippet '\\' "user" ir
\bigg|$0
endsnippet

context "math()"
snippet '\|' "user" wr
\left| $1 \right|$0
endsnippet

priority 0
context "math()"
snippet 'i' "user" ir
\mathrm{i}
endsnippet

context "math()"
snippet 'e' "user" ir
\mathrm{e}
endsnippet

context "math()"
snippet 'd' "user" ir
\mathrm{d}
endsnippet

context "math()"
snippet 'p' "user" ir
\partial 
endsnippet
priority 101

context "math()"
snippet 'd/' "diff" ir
\frac{\mathrm{d}}{\mathrm{d}$1}$0
endsnippet

context "math()"
snippet 'p/' "partial" ir
\frac{\partial}{\partial{${1:${VISUAL}}}}$0
endsnippet

context "math()"
snippet ''' "user" ir
\dot{$1}$0
endsnippet

priority 0
context "math()"
snippet 'x' "user" ir
\times
endsnippet

context "math()"
snippet '\.' "user" ir
\cdot
endsnippet

context "math()"
snippet '6' "user" ir
\wedge
endsnippet

context "math()"
snippet '_' "user" ir
_{$1}$0
endsnippet

context "math()"
snippet '\*' "user" ir
\star
endsnippet

context "math()"
snippet 'gt' "user" ir
> 
endsnippet

context "math()"
snippet 'lt' "user" ir
< 
endsnippet

context "math()"
snippet 'in' "user" ir
\in
endsnippet

context "math()"
snippet 'to' "user" ir
\to
endsnippet

context "math()"
snippet 'inf' "user" ir
\infty
endsnippet

context "math()"
snippet 'S' "user" ir
\int 
endsnippet

priority 1
context "math()"
snippet 'oS' "user" ir
\oint 
endsnippet

context "math()"
snippet 'SS' "user" ir
\iint 
endsnippet

priority 2
context "math()"
snippet 'oSS' "user" ir
\oiint 
endsnippet

context "math()"
snippet 'SSS' "user" ir
\iiint 
endsnippet

priority 101
context "math()"
snippet 'oSSS' "user" ir
\oiiint 
endsnippet

priority 50
context "math()"
snippet '(geq|leq|to|neq|sin|cos|tan|sec|csc|cot|sh|ch|th|cth|ln|log|exp)' "functions" ir
\\`!p snip.rv = match.group(1)` 
endsnippet

priority 51
context "math()"
snippet 'a(sin|cos|tan|sec|csc|cot|sh|ch|th|cth)' "rev functions" ir
\\`!p snip.rv = match.group(1)`^{-1} 
endsnippet

context "math()"
snippet 'sq' "sqrt" ir
\sqrt{$1}$0
endsnippet

context "math()"
snippet 'lim' "limit" wr
\lim_{$1}$0
endsnippet

priority 80

context "math()"
snippet '\.([A-Za-z0-9-+/\\]+)' "user" ir
^{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '\^\{([^}]*)\}' "user" ir
_{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '_\{([^}=]*)\}' "user" ir
^{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '\^\{([^}]*)\},' "user" ir
^{`!p snip.rv = match.group(1)`}_{$1}$0
endsnippet

context "math()"
snippet '([\^_]\{(?:[a-z]|\\[a-z]+))\}\+' "user" ir
`!p snip.rv = match.group(1)`+1}
endsnippet

context "math()"
snippet '([\^_]\{(?:[a-z]|\\[a-z]+))\}\-' "user" ir
`!p snip.rv = match.group(1)`-1}
endsnippet

context "math()"
snippet '_\{([^}]*)\},' "user" ir
_{`!p snip.rv = match.group(1)`}^{$1}$0
endsnippet

priority 101
context "math()"
snippet 'ali' "user" wr
\begin{aligned}
$1
\end{aligned}
endsnippet

context "math()"
snippet 'cases' "cases" wr
\begin{cases}
	$1
\end{cases}$0
endsnippet

context "math()"
snippet '-=' "linesep" ir

&=
endsnippet

context "math()"
snippet '-' "sep" ir
&
endsnippet

context "math()"
pre_expand "gen_mat(snip, match.group(1), int(match.group(2)), int(match.group(3)))"
snippet '(|[p|P|b|B|v|V])mat(\d)(\d)' "matnm" wr
endsnippet

priority 0
context "math()"
snippet 'h' "hat" wr
\hat{${1:${VISUAL}}}
endsnippet

context "math()"
snippet 'v' "vec" wr
\vec{${1:${VISUAL}}}
endsnippet

priority 101
context "math()"
snippet '~' "tidle" w
\sim
endsnippet
priority 0

priority 101
context "math()"
snippet 'o' "tidle" w
\circ
endsnippet
priority 0

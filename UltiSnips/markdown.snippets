global !p
def math():
    return vim.exec_lua('''
        -- local trs = vim.inspect_pos().treesitter
        -- local res = false
        -- for _, item in ipairs(trs) do
        --    if item.capture == "markup.math" then res = true end
        -- end
        -- return res
        return true
''')

def gen_mat(snip, delim, rows, cols):
    snip.buffer[snip.line] = snip.buffer[snip.line][:snip.buffer[snip.line].rfind(';')]
    ss = '\\begin{' + delim + 'matrix}\n'
    for i in range(0, rows):
        for j in range(1, cols):
            ss += ' ${' f'{i * cols + j}:' 'a_{' f'{i+1},{j}' '}} &'
        ss += ' ${' f'{(i + 1) * cols}:' 'a_{' f'{i+1},{cols}' '}} \\\\\\\\\n'
    ss += '\\end{' + delim + 'matrix}$0'
    snip.expand_anon(ss)
endglobal

snippet $$$$ "display" iA
$$
$1
$$
$0
endsnippet

context "math()"
snippet { "brace" iA
{$0}
endsnippet

context "math()"
snippet ^ "super" iA
^{$1}$0
endsnippet

context "math()"
snippet ';dis ' "display style" iAr
\displaystyle 
endsnippet

context "math()"
snippet ';k ' "ket" iAr
\ket{$1}$0
endsnippet

context "math()"
snippet ';b ' "bra" iAr
\bra{$1}$0
endsnippet

context "math()"
snippet ';bk ' "braket" iAr
\braket{$1|$2}$0
endsnippet

context "math()"
snippet ';bbk ' "braket2" iAr
\braket{$1|$2|$3}$0
endsnippet

context "math()"
snippet ';sum' "user" iAr
\sum_{$1}$0
endsnippet

context "math()"
snippet ''a' "user" iAr
\alpha
endsnippet

priority 101
context "math()"
snippet '''a' "user" iAr
\Alpha
endsnippet
priority 0

context "math()"
snippet ''b' "user" iAr
\beta
endsnippet

priority 101
context "math()"
snippet '''b' "user" iAr
\Beta
endsnippet
priority 0

context "math()"
snippet ''g' "user" iAr
\gamma
endsnippet

priority 101
context "math()"
snippet '''g' "user" iAr
\Gamma
endsnippet
priority 0

context "math()"
snippet ''d' "user" iAr
\delta
endsnippet

priority 101
context "math()"
snippet '''d' "user" iAr
\Delta
endsnippet
priority 0

context "math()"
snippet ''e' "user" iAr
\epsilon
endsnippet

priority 101
context "math()"
snippet '''e' "user" iAr
\Epsilon
endsnippet
priority 0

context "math()"
snippet ''ve' "user" iAr
\varepsilon
endsnippet

context "math()"
snippet ''z' "user" iAr
\zeta
endsnippet

priority 101
context "math()"
snippet '''z' "user" iAr
\Zeta
endsnippet
priority 0

context "math()"
snippet ''h' "user" iAr
\eta
endsnippet

priority 101
context "math()"
snippet '''h' "user" iAr
\Eta
endsnippet
priority 0

context "math()"
snippet ''th|'0' "user" iAr
\theta
endsnippet

priority 101
context "math()"
snippet '''th' "user" iAr
\Theta
endsnippet
priority 0

context "math()"
snippet ''i' "user" iAr
\iota
endsnippet

priority 101
context "math()"
snippet '''i' "user" iAr
\Iota
endsnippet
priority 0

context "math()"
snippet ''k' "user" iAr
\kappa
endsnippet

priority 101
context "math()"
snippet '''k' "user" iAr
\Kappa
endsnippet
priority 0

context "math()"
snippet ''l' "user" iAr
\lambda
endsnippet

priority 101
context "math()"
snippet '''l' "user" iAr
\Lambda
endsnippet
priority 0

context "math()"
snippet ''m' "user" iAr
\mu
endsnippet

priority 101
context "math()"
snippet '''m' "user" iAr
\Mu
endsnippet
priority 0

context "math()"
snippet ''x' "user" iAr
\xi
endsnippet

priority 101
context "math()"
snippet '''x' "user" iAr
\Xi
endsnippet
priority 0

context "math()"
snippet ''p' "user" iAr
\pi
endsnippet

priority 101
context "math()"
snippet '''p' "user" iAr
\Pi
endsnippet
priority 0

context "math()"
snippet ''r|'6' "user" iAr
\rho
endsnippet

priority 101
context "math()"
snippet '''r|''6' "user" iAr
\Rho
endsnippet
priority 0

context "math()"
snippet ''s|'7' "user" iAr
\sigma
endsnippet

priority 101
context "math()"
snippet '''s|''7' "user" iAr
\Sigma
endsnippet
priority 0

context "math()"
snippet ''t' "user" iAr
\tau
endsnippet

priority 101
context "math()"
snippet '''t' "user" iAr
\Tau
endsnippet
priority 0

context "math()"
snippet ''5' "user" iAr
\varphi
endsnippet

priority 101
context "math()"
snippet '''5' "user" iAr
\Phi
endsnippet
priority 0

context "math()"
snippet ''4' "user" iAr
\psi
endsnippet

priority 101
context "math()"
snippet '''4' "user" iAr
\Psi
endsnippet
priority 0

context "math()"
snippet ''n' "nabla" iAr
\nabla
endsnippet

context "math()"
snippet ''o' "user" iAr
\omega
endsnippet

priority 101
context "math()"
snippet '''o' "user" iAr
\Omega
endsnippet
priority 0

context "math()"
snippet ';9' "user" iAr
\left( $1 \right)$0
endsnippet

context "math()"
snippet ';\[' "user" iAr
\left[ $1 \right]$0
endsnippet

context "math()"
snippet ';\{' "user" iAr
\left\{ $1 \right\}$0
endsnippet

context "math()"
snippet '==' "user" iAr
+
endsnippet

context "math()"
snippet '([A-Za-z]+)(scr|frak|bb|cal) ' "user" iAr
\math`!p snip.rv = match.group(2) + '{' + match.group(1).upper()`}
endsnippet

context "math()"
snippet '([A-Za-z0-9]+)(bf|rm) ' "user" iAr
\math`!p snip.rv = match.group(2) + '{' + match.group(1)`}
endsnippet

context "math()"
snippet '(\\?[A-Za-z0-9]+)bs ' "user" iAr
\boldsymbol{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '(\\?[A-Za-z0-9]+)vv' "user" iAr
\vec{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '//' "user" iAr
\dfrac{${1:${VISUAL}}}{$2}$0
endsnippet

priority 101
context "math()"
snippet '(\\?[A-Za-z0-9_^{}]+)//' "user" iAr
\dfrac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet
priority 0

context "math()"
snippet ';\\' "user" iAr
\bigg|$0
endsnippet

context "math()"
snippet ';\|' "user" wAr
\left| $1 \right|$0
endsnippet

context "math()"
snippet ';ii' "user" iAr
\mathrm{i}
endsnippet

context "math()"
snippet ';ee' "user" iAr
\mathrm{e}
endsnippet

context "math()"
snippet ';dd' "user" iAr
\mathrm{d}
endsnippet

context "math()"
snippet ';pp' "user" iAr
\partial 
endsnippet

context "math()"
snippet ';d/' "diff" iAr
\frac{\mathrm{d}}{\mathrm{d}$1}$0
endsnippet

context "math()"
snippet ';p/' "partial" iAr
\frac{\partial}{\partial{${1:${VISUAL}}}}$0
endsnippet

context "math()"
snippet ';'' "user" iAr
\dot{$1}$0
endsnippet

context "math()"
snippet ';x' "user" iAr
\times
endsnippet

context "math()"
snippet ';\.' "user" iAr
\cdot
endsnippet

context "math()"
snippet ';6' "user" iAr
\wedge
endsnippet

context "math()"
snippet '_' "user" iAr
_{$1}$0
endsnippet

context "math()"
snippet ';\*' "user" iAr
\star
endsnippet

context "math()"
snippet ';gt' "user" iAr
> 
endsnippet

context "math()"
snippet ';lt' "user" iAr
< 
endsnippet

context "math()"
snippet ';(geq|leq|to|neq|sin|cos|tan|sec|csc|cot|sh|ch|th|cth|ln|log|exp)' "user" iAr
\\`!p snip.rv = match.group(1)` 
endsnippet

context "math()"
snippet ';in' "user" iAr
\in
endsnippet

context "math()"
snippet ';tg' "user" iAr
\tan
endsnippet

context "math()"
snippet ';asin' "user" iAr
\sin^{-1}
endsnippet

context "math()"
snippet ';acos' "user" iAr
\cos^{-1}
endsnippet

context "math()"
snippet ';atg' "user" iAr
\tan^{-1}
endsnippet

context "math()"
snippet ';actg' "user" iAr
\cot^{-1}
endsnippet

context "math()"
snippet ';ash' "user" iAr
\sinh^{-1}
endsnippet

context "math()"
snippet ';ach' "user" iAr
\cosh^{-1}
endsnippet

context "math()"
snippet ';ath' "user" iAr
\tanh^{-1}
endsnippet

context "math()"
snippet ';acth' "user" iAr
\coth^{-1}
endsnippet

context "math()"
snippet ';to' "user" iAr
\to
endsnippet

context "math()"
snippet ';inf' "user" iAr
\infty
endsnippet

context "math()"
snippet ';S' "user" iAr
\int 
endsnippet

context "math()"
snippet ';sq' "user" iAr
\sqrt{$1}$0
endsnippet

context "math()"
snippet ';lim' "user" wAr
\lim_{$1}$0
endsnippet

context "math()"
snippet '\.([A-Za-z0-9-+/\\]+)\.' "user" iAr
^{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '\^\{([^}]*)\}\.' "user" iAr
_{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '_\{([^}=]*)\}\.' "user" iAr
^{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '\^\{([^}]*)\},\.' "user" iAr
^{`!p snip.rv = match.group(1)`}_{$1}$0
endsnippet

context "math()"
snippet '([\^_]\{(?:[a-z]|\\[a-z]+))\};=' "user" iAr
`!p snip.rv = match.group(1)`+1}
endsnippet

context "math()"
snippet '([\^_]\{(?:[a-z]|\\[a-z]+))\};-' "user" iAr
`!p snip.rv = match.group(1)`-1}
endsnippet

context "math()"
snippet '_\{([^}]*)\},\.' "user" iAr
_{`!p snip.rv = match.group(1)`}^{$1}$0
endsnippet

context "math()"
snippet ';ali' "user" wAr
\begin{aligned}
$1
\end{aligned}
endsnippet

context "math()"
snippet ';cases' "cases" wAr
\begin{cases}
	$1
\end{cases}$0
endsnippet

context "math()"
snippet '-=' "linesep" iAr

&=
endsnippet

context "math()"
snippet '--' "sep" iAr
&
endsnippet

context "math()"
pre_expand "gen_mat(snip, match.group(1), int(match.group(2)), int(match.group(3)))"
snippet ';(|[p|P|b|B|v|V])mat(\d)(\d) ' "matnm" wAr
endsnippet

context "math()"
snippet ';h' "hat" wAr
\hat{${1:${VISUAL}}}
endsnippet

context "math()"
snippet ';v ' "vec" wAr
\vec{${1:${VISUAL}}}
endsnippet

priority 101
context "math()"
snippet ';~' "tidle" wA
\sim
endsnippet
priority 0

priority 101
context "math()"
snippet ';o' "tidle" wA
\circ
endsnippet
priority 0
